basePath: /
definitions:
  TAgentMetadataManager.Config:
    properties:
      configFileLocation:
        type: string
      psk_key:
        type: string
      server:
        properties:
          host:
            type: string
          port:
            type: integer
        type: object
    type: object
  TAgentMetadataManager.ConfigResponseData:
    properties:
      result:
        $ref: '#/definitions/TAgentMetadataManager.Config'
    type: object
  TOperationCommand.OneOperationCommand:
    properties:
      id:
        type: string
      operationCommand:
        type: string
      operationResult:
        $ref: '#/definitions/TOperationCommand.OperationResult'
      operationScript:
        type: string
      status:
        type: string
      tryTimes:
        type: integer
    type: object
  TOperationCommand.OneOperationCommandResponseData:
    properties:
      result:
        $ref: '#/definitions/TOperationCommand.OneOperationCommand'
    type: object
  TOperationCommand.OperationResult:
    properties:
      returnError:
        type: boolean
      stdErr:
        type: string
      stdOut:
        type: string
    type: object
  TRunCommand.RequestDataForRunCommandByScriptContent:
    properties:
      scriptContent:
        default: |-
          #!/bin/bash
          echo "start"
          echo "hello yang"
          echo "end"
        type: string
    type: object
  TRunCommand.RequestDataForRunCommandByUrl:
    properties:
      url:
        default: https://ansys-gateway-development.s3.eu-west-3.amazonaws.com/2023-02-27-linux-script.sh
        type: string
    type: object
host: localhost:9001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: HellowWorldGoAgent API
  version: "1.0"
paths:
  /Exit:
    get:
      consumes:
      - application/json
      description: Exit the agent
      produces:
      - application/json
      responses:
        "200":
          description: Exit agent successfully
          schema:
            type: string
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Failed to create object
          schema:
            type: string
      summary: Exit the agent
  /RunCommandByScriptContent:
    post:
      consumes:
      - application/json
      description: description
      parameters:
      - description: param for RunCommandByScriptContent
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/TRunCommand.RequestDataForRunCommandByScriptContent'
      produces:
      - application/json
      responses:
        "200":
          description: Run operationCommand successfully
          schema:
            $ref: '#/definitions/TOperationCommand.OneOperationCommandResponseData'
        "502":
          description: Backend service error or down
          schema:
            type: string
      summary: Run command using script content
  /RunCommandWithUrl:
    post:
      consumes:
      - application/json
      deprecated: true
      description: description
      parameters:
      - description: param for RunCommandWithUrl
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/TRunCommand.RequestDataForRunCommandByUrl'
      produces:
      - application/json
      responses:
        "201":
          description: The object was created successfully
          schema:
            type: string
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Failed to create object
          schema:
            type: string
      summary: Run command using url
  /dev/getAppConfig:
    get:
      consumes:
      - application/json
      description: Get origin metadata json
      produces:
      - application/json
      responses:
        "200":
          description: Get configData successfully
          schema:
            $ref: '#/definitions/TAgentMetadataManager.ConfigResponseData'
      summary: Get origin metadata json
  /dev/test:
    get:
      consumes:
      - application/json
      description: Test
      produces:
      - application/json
      responses: {}
      summary: Test
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
